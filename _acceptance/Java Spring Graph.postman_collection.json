{
	"info": {
		"_postman_id": "038cbc49-3d0f-45ac-8561-4e282d4e1288",
		"name": "Java Spring Graph",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22810484"
	},
	"item": [
		{
			"name": "Student By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - firstName, lastName, and courses\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(student) {\r",
							"        pm.expect(student).to.be.an('object');\r",
							"        pm.expect(student.firstName).to.exist;\r",
							"        pm.expect(student.lastName).to.exist;\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"FirstName and lastName are non-empty strings\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(student) {\r",
							"        pm.expect(student.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"FirstName should not be empty\");\r",
							"        pm.expect(student.lastName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LastName should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Courses should be an array or null\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    responseData.forEach(function(data) {\r",
							"        pm.expect(data.courses).to.satisfy(function (courses) {\r",
							"            return Array.isArray(courses) || courses === null;\r",
							"        }, \"Courses should be an array or null\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/api/graph/student?firstName=Class&lastName=Clown",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"graph",
						"student"
					],
					"query": [
						{
							"key": "firstName",
							"value": "Class"
						},
						{
							"key": "lastName",
							"value": "Clown"
						}
					]
				}
			},
			"response": [
				{
					"name": "Student By Name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8080/api/graph/student?firstName=Class&lastName=Clown",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graph",
								"student"
							],
							"query": [
								{
									"key": "firstName",
									"value": "Class"
								},
								{
									"key": "lastName",
									"value": "Clown"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Mar 2025 19:50:26 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"firstName\": \"Class\",\n        \"lastName\": \"Clown\",\n        \"courses\": [\n            {\n                \"courseName\": \"Algebra\",\n                \"students\": null\n            },\n            {\n                \"courseName\": \"English\",\n                \"students\": null\n            },\n            {\n                \"courseName\": \"Art\",\n                \"students\": null\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "Course By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - courseName and students\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property('courseName');\r",
							"        pm.expect(item).to.have.property('students');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Students field is either null or an array\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item.students).to.satisfy(function (students) {\r",
							"            return students === null || Array.isArray(students);\r",
							"        });\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/api/graph/course?courseName=Art",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"graph",
						"course"
					],
					"query": [
						{
							"key": "courseName",
							"value": "Art"
						}
					]
				}
			},
			"response": [
				{
					"name": "Course By Name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8080/api/graph/course?courseName=Art",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graph",
								"course"
							],
							"query": [
								{
									"key": "courseName",
									"value": "Art"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Mar 2025 19:55:42 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"courseName\": \"Art\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "Course By Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the course object\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    responseData.forEach(function(course) {\r",
							"        pm.expect(course).to.be.an('object');\r",
							"        pm.expect(course.courseName).to.exist.and.to.be.a('string');\r",
							"        \r",
							"        pm.expect(course.students).to.exist.and.to.be.an('array');\r",
							"        course.students.forEach(function(student) {\r",
							"            pm.expect(student).to.be.an('object');\r",
							"            pm.expect(student.firstName).to.exist.and.to.be.a('string');\r",
							"            pm.expect(student.lastName).to.exist.and.to.be.a('string');\r",
							"            pm.expect(student.courses).to.be.null;\r",
							"        });\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the students array and its nested objects\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(course) {\r",
							"    pm.expect(course).to.have.property('courseName');\r",
							"    pm.expect(course.students).to.be.an('array');\r",
							"    course.students.forEach(function(student) {\r",
							"      pm.expect(student).to.be.an('object');\r",
							"      pm.expect(student).to.have.property('firstName');\r",
							"      pm.expect(student).to.have.property('lastName');\r",
							"      pm.expect(student.courses).to.be.null;\r",
							"    });\r",
							"  });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/api/graph/course/student?firstName=Class&lastName=Clown",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"graph",
						"course",
						"student"
					],
					"query": [
						{
							"key": "firstName",
							"value": "Class"
						},
						{
							"key": "lastName",
							"value": "Clown"
						}
					]
				}
			},
			"response": [
				{
					"name": "Course By Student",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8080/api/graph/course/student?firstName=Class&lastName=Clown",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graph",
								"course",
								"student"
							],
							"query": [
								{
									"key": "firstName",
									"value": "Class"
								},
								{
									"key": "lastName",
									"value": "Clown"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Mar 2025 19:51:25 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"courseName\": \"Algebra\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    },\n    {\n        \"courseName\": \"English\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    },\n    {\n        \"courseName\": \"Art\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "All Courses",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/api/graph/course/all",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"graph",
						"course",
						"all"
					]
				}
			},
			"response": [
				{
					"name": "All Courses",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8080/api/graph/course/all",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graph",
								"course",
								"all"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Mar 2025 19:56:00 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"courseName\": \"Algebra\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Dunce\",\n                \"courses\": null\n            },\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    },\n    {\n        \"courseName\": \"History\",\n        \"students\": [\n            {\n                \"firstName\": \"Teachers\",\n                \"lastName\": \"Pet\",\n                \"courses\": null\n            }\n        ]\n    },\n    {\n        \"courseName\": \"English\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    },\n    {\n        \"courseName\": \"Art\",\n        \"students\": [\n            {\n                \"firstName\": \"Class\",\n                \"lastName\": \"Clown\",\n                \"courses\": null\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "All Students",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/api/graph/student/all",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"graph",
						"student",
						"all"
					]
				}
			},
			"response": [
				{
					"name": "All Students",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8080/api/graph/student/all",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graph",
								"student",
								"all"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Mar 2025 19:56:07 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"firstName\": \"Class\",\n        \"lastName\": \"Clown\",\n        \"courses\": [\n            {\n                \"courseName\": \"Algebra\",\n                \"students\": null\n            },\n            {\n                \"courseName\": \"English\",\n                \"students\": null\n            },\n            {\n                \"courseName\": \"Art\",\n                \"students\": null\n            }\n        ]\n    },\n    {\n        \"firstName\": \"Class\",\n        \"lastName\": \"Dunce\",\n        \"courses\": [\n            {\n                \"courseName\": \"Algebra\",\n                \"students\": null\n            }\n        ]\n    },\n    {\n        \"firstName\": \"Teachers\",\n        \"lastName\": \"Pet\",\n        \"courses\": [\n            {\n                \"courseName\": \"History\",\n                \"students\": null\n            }\n        ]\n    }\n]"
				}
			]
		}
	]
}